// src/services/api-download-user-disability/calcularDistribucionDias.js

/**
 * Reparte d√≠as nuevos entre el tramo <=90 y >90, considerando acumulado previo.
 *
 * @param {object|null} validacioTablaProrroga  ‚Äî Objeto con sumatoria_incapacidades o null
 * @param {number} diasLiquidadosAnterior        ‚Äî D√≠as liquidados de la incapacidad anterior
 * @param {number} diasNuevos                    ‚Äî D√≠as nuevos a liquidar (no repetidos)
 * @returns {{ sumatoriaPrevia: number, diasNuevos: number, previosEnMenor90: number, agregadosEnMenor90: number, diasEnMayor90: number, sumatoriaTotal: number }}
 */
/* export function calcularDistribucionDias(
  validacioTablaProrroga,
  diasLiquidadosAnterior,
  diasNuevos
) {
  // 1) Acumulado previo total
  const sumatoriaPrevia = validacioTablaProrroga?.sumatoria_incapacidades != null
    /? Number(validacioTablaProrroga.sumatoria_incapacidades)
    : Number(diasLiquidadosAnterior);

  // 2) Cu√°ntos d√≠as previos ya estaban en el tramo <=90
  const previosEnMenor90 = Math.min(sumatoriaPrevia, 90);

  // 3) Cupo restante para alcanzar 90 d√≠as
  const cupoMenor90 = Math.max(90 - sumatoriaPrevia, 0);

  // 4) D√≠as nuevos que efectivamente se agregan al tramo <=90
  const agregadosEnMenor90 = Math.min(cupoMenor90, diasNuevos);

  // 5) D√≠as que pasan al tramo >90
  const diasEnMayor90 = diasNuevos - agregadosEnMenor90;

  // 6) Sumatoria final de d√≠as tras pr√≥rroga
  const sumatoriaTotal = sumatoriaPrevia + diasNuevos;

  // 7) Log detallado con descripciones claras
  console.log(`\nüìä Distribuci√≥n de d√≠as tras pr√≥rroga:`);
  console.log(`- D√≠as previos acumulados: ${sumatoriaPrevia}`);
  console.log(`  ‚Ä¢ Previos en tramo ‚â§90: ${previosEnMenor90}`);
  console.log(`- D√≠as nuevos a procesar: ${diasNuevos}`);
  console.log(`  ‚Ä¢ Agregados en tramo ‚â§90: ${agregadosEnMenor90}`);
  console.log(`  ‚Ä¢ D√≠as en tramo >90: ${diasEnMayor90}`);
  console.log(`- Total en tramo ‚â§90 tras ajuste: ${previosEnMenor90 + agregadosEnMenor90}`);
  console.log(`- Total en tramo >90 tras ajuste: ${sumatoriaTotal - 90}`);
  console.log(`- Sumatoria final de d√≠as: ${sumatoriaTotal}\n`);

  return { sumatoriaPrevia, diasNuevos, previosEnMenor90, agregadosEnMenor90, diasEnMayor90, sumatoriaTotal };
} */


/*   export function calcularDistribucionDias(
  validacioTablaProrroga,
  diasLiquidadosAnterior,
  diasNuevos
) {
  const sumatoriaPrevia = validacioTablaProrroga?.sumatoria_incapacidades != null
    ? Number(validacioTablaProrroga.sumatoria_incapacidades)
    : Number(diasLiquidadosAnterior);

  let diasRestantes = diasNuevos;
  let acumulado = sumatoriaPrevia;

  // Tramo A: 1‚Äì90
  const enA = Math.max(0, Math.min(90 - acumulado, diasRestantes));
  acumulado += enA;
  diasRestantes -= enA;

  // Tramo B: 91‚Äì180
  const enB = Math.max(0, Math.min(180 - Math.max(acumulado, 90), diasRestantes));
  acumulado += enB;
  diasRestantes -= enB;

  // Tramo C: 181‚Äì540
  const enC = Math.max(0, Math.min(540 - Math.max(acumulado, 180), diasRestantes));
  acumulado += enC;
  diasRestantes -= enC;

  // Tramo D: 541+
  const enD = Math.max(0, diasRestantes);
  acumulado += enD;

  const sumatoriaTotal = sumatoriaPrevia + diasNuevos;

  // Log para que no te pierdas en la tormenta de d√≠as
  console.log(`\nüìä Distribuci√≥n de d√≠as tras pr√≥rroga:`);
  console.log(`- D√≠as previos acumulados: ${sumatoriaPrevia}`);
  console.log(`- D√≠as nuevos a procesar: ${diasNuevos}`);
  console.log(`  ‚Ä¢ Tramo 1‚Äì90     ‚Üí ${enA} d√≠as`);
  console.log(`  ‚Ä¢ Tramo 91‚Äì180   ‚Üí ${enB} d√≠as`);
  console.log(`  ‚Ä¢ Tramo 181‚Äì540  ‚Üí ${enC} d√≠as`);
  console.log(`  ‚Ä¢ Tramo 541+     ‚Üí ${enD} d√≠as`);
  console.log(`- Sumatoria final de d√≠as: ${sumatoriaTotal}\n`);

  return {
    sumatoriaPrevia,
    diasNuevos,
    diasTramo_1a90: enA,
    diasTramo_91a180: enB,
    diasTramo_181a540: enC,
    diasTramo_541plus: enD,
    sumatoriaTotal
  };
} */


  export function calcularDistribucionDias(
  validacioTablaProrroga,
  diasLiquidadosAnterior,
  diasNuevos
) {
  const sumatoriaPrevia = validacioTablaProrroga?.sumatoria_incapacidades != null
    ? Number(validacioTablaProrroga.sumatoria_incapacidades)
    : Number(diasLiquidadosAnterior);

  let diasRestantes = diasNuevos;
  let acumulado = sumatoriaPrevia;

  console.log(`\n=== üßÆ INICIO DE DISTRIBUCI√ìN DE D√çAS ===`);
  console.log(`D√≠as previos acumulados: ${sumatoriaPrevia}`);
  console.log(`D√≠as nuevos a procesar: ${diasNuevos}`);
  console.log(`D√≠as totales esperados: ${sumatoriaPrevia + diasNuevos}\n`);

  // Tramo A: 1‚Äì90
  const limiteA = 90;
  const espacioDisponibleA = Math.max(limiteA - acumulado, 0);
  const enA = Math.min(espacioDisponibleA, diasRestantes);
  console.log(`üîπ Tramo 1‚Äì90`);
  console.log(`  - Cupo disponible: ${espacioDisponibleA}`);
  console.log(`  - Asignados: ${enA}`);
  acumulado += enA;
  diasRestantes -= enA;

  // Tramo B: 91‚Äì180
  const limiteB = 180;
  const espacioDisponibleB = Math.max(limiteB - Math.max(acumulado, 90), 0);
  const enB = Math.min(espacioDisponibleB, diasRestantes);
  console.log(`üîπ Tramo 91‚Äì180`);
  console.log(`  - Cupo disponible: ${espacioDisponibleB}`);
  console.log(`  - Asignados: ${enB}`);
  acumulado += enB;
  diasRestantes -= enB;

  // Tramo C: 181‚Äì540
  const limiteC = 540;
  const espacioDisponibleC = Math.max(limiteC - Math.max(acumulado, 180), 0);
  const enC = Math.min(espacioDisponibleC, diasRestantes);
  console.log(`üîπ Tramo 181‚Äì540`);
  console.log(`  - Cupo disponible: ${espacioDisponibleC}`);
  console.log(`  - Asignados: ${enC}`);
  acumulado += enC;
  diasRestantes -= enC;

  // Tramo D: 541+
  const enD = Math.max(diasRestantes, 0);
  console.log(`üîπ Tramo 541+`);
  console.log(`  - Asignados: ${enD}`);
  acumulado += enD;

  const sumatoriaTotal = sumatoriaPrevia + diasNuevos;

  console.log(`\nüìä Resumen final de distribuci√≥n:`);
  console.log(`  ‚Ä¢ Tramo 1‚Äì90     ‚Üí ${enA} d√≠as`);
  console.log(`  ‚Ä¢ Tramo 91‚Äì180   ‚Üí ${enB} d√≠as`);
  console.log(`  ‚Ä¢ Tramo 181‚Äì540  ‚Üí ${enC} d√≠as`);
  console.log(`  ‚Ä¢ Tramo 541+     ‚Üí ${enD} d√≠as`);
  console.log(`üéØ Sumatoria final de d√≠as: ${sumatoriaTotal}`);
  console.log(`=== üßÆ FIN DE DISTRIBUCI√ìN ===\n`);

  return {
    sumatoriaPrevia,
    diasNuevos,
    diasTramo_1a90: enA,
    diasTramo_91a180: enB,
    diasTramo_181a540: enC,
    diasTramo_541plus: enD,
    sumatoriaTotal
  };
}
